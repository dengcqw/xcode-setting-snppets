<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>djHFRequest&amp;Signal</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>- (NSOperation *)&lt;#checkLoginPasswd:(NSString *)passwd#&gt;
                                  success:(void (^)(AFHTTPRequestOperation *, id))success
                                  failure:(void (^)(AFHTTPRequestOperation *,  NSError *))failure {
    
    NSString * scheme       = schemeForType(kURLTypeCommon);
    NSString * host         = hostForType(kURLTypeCommon);
    NSString * path         = @"api";
    
    NSString *url = PAMakeURLString(scheme, host, path);
    NSDictionary * param = @{
                             @"sToken":[self getToken],
                             @"sPwd":passwd
                             };
    
    NSOperation *operation = [self POST:url
                            parameters:param
                               success:^(AFHTTPRequestOperation *operation, id responseObject) {
                                   if (success) {
                                       success(operation, responseObject);
                                   }
                               } failure:failure];
    
    return operation;
}

// success and failure can be nil if you don't need
- (RACSignal *)rac_&lt;#checkLoginPasswd:(NSString *)passwd#&gt;
                            success:(void (^)(AFHTTPRequestOperation *, id))success
                            failure:(void (^)(AFHTTPRequestOperation *, NSError *))failure {
    
    return [RACSignal createSignal:^RACDisposable *(id&lt;RACSubscriber&gt; subscriber) {
        NSOperation *op = [self &lt;#checkLoginPasswd:passwd#&gt; success:^(AFHTTPRequestOperation *op, id res) {
            if (success) {
                success(op, res);
            }
            [subscriber sendNext:res];
            [subscriber sendCompleted];
        } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
            if (failure) {
                failure(operation, error);
            }
            [subscriber sendError:error];
        }];
        return [RACDisposable disposableWithBlock:^{
            [op cancel];
        }];
    }];
}

</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>7D2CE268-90BC-4425-9832-B166543EDA12</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>hf request &amp; signal </string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
