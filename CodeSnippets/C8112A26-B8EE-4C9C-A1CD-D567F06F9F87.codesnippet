<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>djCaLayerPropertyList</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>CodeBlock</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>    // (backgroundColor 可以用图片做背景
    // position 中心点，cornerRadius圆角，borderColor&amp;width边框
    // shadowOffset 阴影大小
    // shouldRasterize ?
// 当shouldRasterize设成true时，layer被渲染成一个bitmap，并缓存起来，等下次使用时不会再重新去渲染了。实现圆角本身就是在做颜色混合（blending），如果每次页面出来时都blending，消耗太大，这时shouldRasterize = yes，下次就只是简单的从渲染引擎的cache里读取那张bitmap，节约系统资源。
// 额外收获：如果在滚动tableView时，每次都执行圆角设置，肯定会阻塞UI，设置这个将会使滑动更加流畅。
// rasterize 是栅格化的意思
// rasterizeScale和shouldRasterize可以一起使用)
// 一般rasterizeScale = [UIScreen mainScreen].scale
    CALayer *layer = [CALayer layer];
    layer.backgroundColor = [UIColor whiteColor].CGColor;  //or CGIamgeRef图片做背景
    layer.bounds = CGRectMake(0, 0, &lt;#200#&gt;, &lt;#200#&gt;);
    layer.position = CGPointMake(&lt;#160#&gt;, &lt;#170#&gt;);
    layer.opacity = 1.0;
    layer.cornerRadius = 10; // 圆角
    layer.borderColor = [UIColor greenColor].CGColor;
    layer.borderWidth = 1.0;
    layer.shadowOffset = CGSizeMake(0, 2);
    layer.shadowOpacity = 0.35;
    layer.shadowColor = [UIColor darkGrayColor].CGColor;
    layer.shouldRasterize = YES;
    [&lt;#rootLayer#&gt; addSublayer:layer];
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>C8112A26-B8EE-4C9C-A1CD-D567F06F9F87</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>Ca - layer with property</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
