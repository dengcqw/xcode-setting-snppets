<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>CodeExpression</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// NSCoding

struct PropertyKey {

    static let contentkey = "content"
    static let completedkey = "completed"

}

class TodoItem: NSObject, NSCoding {

    var content:String = ""
    var completed:Bool = false

    init(content: String, completed: Bool) {

        self.content = content
        self.completed = completed

    }

    required init(coder aDecoder: NSCoder) {

        self.content = aDecoder.decodeObjectForKey(PropertyKey.contentkey) as! String
        self.completed = aDecoder.decodeObjectForKey(PropertyKey.completedkey) as! Bool

    }

    func encodeWithCoder(aCoder: NSCoder) {

        aCoder.encodeObject(content, forKey: PropertyKey.contentkey)
        aCoder.encodeObject(completed, forKey: PropertyKey.completedkey)

    }

}

// Encoding and Storing Data

let savedTodoItems = NSKeyedArchiver.archivedDataWithRootObject(todoItems)

NSUserDefaults.standardUserDefaults().setObject(savedTodoItems, forKey: "todoItems")

// Retrieving and Decoding Data

let storedTodoItems = NSUserDefaults.standardUserDefaults().objectForKey("todoItems")! as AnyObject

todoItems = NSKeyedUnarchiver.unarchiveObjectWithData(storedTodoItems as! NSData) as! TodoItem</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>5C80983C-F118-4F58-8BCB-C7A7E7A763F3</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift - NSCoding NSKeyedArchiver sample</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
