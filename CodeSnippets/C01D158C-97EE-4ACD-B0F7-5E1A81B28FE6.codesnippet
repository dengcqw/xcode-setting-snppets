<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>djFdSingleton</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>static ClassName *sSharedInstance = nil;

+ (id)sharedInstance{
	if( sSharedInstance == nil ) {
        static dispatch_once_t onceToken;
        dispatch_once(&amp;onceToken, ^{
            sSharedInstance = [[self alloc] initPrivate];
        });
    }
    NSAssert( sSharedInstance != nil, @"Could not create shared ClassToReplace Instance" );
	return sSharedInstance;
}

+ (void)sharedInstance {
	[sSharedInstance release];
	sSharedInstance = nil;
}

// This way is not allowed.
- (instancetype)init {
    @throw [NSException exceptionWithName:@"Singleton"
                                   reason:@"Use +[&lt;#ClassName#&gt; shareInstance]"
                                 userInfo:nil];
    return nil;
}

// This is the really init method
- (instancetype)initPrivate {
    self = [super init];
    
    return self;
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>C01D158C-97EE-4ACD-B0F7-5E1A81B28FE6</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>Fd - singleton sample</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
